- name: configure backend server
  hosts: backend
  become: yes
  tasks:
  - name: disable nodejs
    ansible.builtin.command:  dnf module disable nodejs -y
    
  - name : install nodejs
    ansible.builtin.command: dnf module install nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - nodejs
    - mysql

  - name: add user
    ansible.builtin.user:
      name: expense

  - name: create directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download url
    ansible.builtin.get_url:
      url:  https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip the file
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: install dependecies
    community.general.npm:
      path: /app

  - name: copy the file
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
  - name: install python libs
    ansible.builtin.pip:
      name:   "{{ item }}"
      executable: pip3.9
    loop:
    - cryptography
    - PyMySQL  

  - name: import mysql data
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: "{{ MYSQL_USER }}"
      login_password: "{{ MYSQL_PASSWORD }}"
      login_host: "{{ MYSQL_HOST }}"
      target: /app/schema/backend.sql
  - name: deamon reload
    ansible.builtin.systemd_service:
      enabled: true
      state: restarted
      daemon_reload: true
      name: backend
